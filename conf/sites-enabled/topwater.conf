# HTTP server (redirect to HTTPS)
server {
    listen 80;
    server_name topwater.uk www.topwater.uk;
    
    # For certbot verification - this must come before other locations
    location ^~ /.well-known/acme-challenge/ {
        root C:/PythonRoot/TopWater-8090;
        try_files $uri =404;
    }

    # Redirect all HTTP traffic to HTTPS
    location / {
        return 301 https://$server_name$request_uri;
    }
}

# HTTPS server
server {
    listen 443 ssl;
    server_name topwater.uk www.topwater.uk;

    ssl_certificate C:/Certbot/live/topwater.uk/fullchain.pem;
    ssl_certificate_key C:/Certbot/live/topwater.uk/privkey.pem;
    ssl_protocols TLSv1.2 TLSv1.3;
    ssl_ciphers HIGH:!aNULL:!MD5;

    # Main application
    location / {
        proxy_pass http://127.0.0.1:8090/;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto https;
        proxy_connect_timeout 300;
        proxy_send_timeout 300;
        proxy_read_timeout 300;
        send_timeout 300;
    }

    # Static Files
    location /static/ {
        alias C:/PythonRoot/TopWater-8090/static/;
        expires 30d;
        add_header Cache-Control "public, no-transform";
        add_header X-Content-Type-Options nosniff;
        add_header X-Frame-Options SAMEORIGIN;
        add_header Strict-Transport-Security "max-age=31536000; includeSubDomains" always;
        try_files $uri $uri/ =404;
    }
}

# Default server
server {
    listen 80 default_server;
    server_name _;
    
    add_header X-Server "DEFAULT-SERVER" always;
    
    location / {
        return 200 "DEFAULT SERVER\nHost: $host\nServer Name: $server_name\n";
        add_header Content-Type text/plain;
    }
}