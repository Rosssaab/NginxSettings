# HTTP server (redirect to HTTPS)
server {
    listen 80;
    server_name old-news.uk www.old-news.uk;

    location ^~ /.well-known/acme-challenge/ {
        alias C:/Certbot/.well-known/acme-challenge/;
    }

    location / {
        return 301 https://$server_name$request_uri;
    }
}

# HTTPS server
server {
    listen 443 ssl;
    http2 on;
    server_name old-news.uk www.old-news.uk;

    # SSL Configuration
    ssl_certificate C:/Certbot/live/old-news.uk/fullchain.pem;
    ssl_certificate_key C:/Certbot/live/old-news.uk/privkey.pem;
    ssl_protocols TLSv1.2 TLSv1.3;
    ssl_ciphers HIGH:!aNULL:!MD5;

    # Main application proxy
    location / {
        proxy_pass http://127.0.0.1:8088;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto https;
    }

    # Static files handling with proper MIME types
    location /static/ {
        alias C:/PythonRoot/Old-News-8088/static/;
        expires 30d;
        add_header Cache-Control "public, no-transform";
        
        # Add proper MIME types
        types {
            image/png  png;
            image/jpeg jpg jpeg;
            image/gif  gif;
        }
        
        # Enable directory listing for debugging
        autoindex on;
        
        # Try files directly first
        try_files $uri $uri/ =404;
        
        # Add access logging for debugging
        access_log C:/nginx/logs/static_access.log combined;
        error_log C:/nginx/logs/static_error.log;
    }
}